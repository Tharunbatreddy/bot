---
#namespace
apiVersion: v1
kind: Namespace
metadata:
  name: frontend

---
#frontend

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: frontend
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: tharun0512/ticketbooking:1.0
          ports:
            - containerPort: 80

          
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: frontend
  labels: 
    app: frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30081
  type: NodePort

---
#backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z mysql-svc 3306; do echo "waiting for mysql"; sleep 3; done;']
      containers:
        - name: backend
          image: tharun0512/ticketbooking-backend:1.0
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_ROOT_PASSWORD
          # Changed readinessProbe from HTTP GET to TCP socket check
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          # Changed livenessProbe from HTTP GET to TCP socket check
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10

---


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: frontend
  labels:
    app: backend
data:
  SPRING_DATASOURCE_URL: jdbc:mysql://mysql-svc:3306/movieticketbookingsystem

  SPRING_DATASOURCE_USERNAME: root

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: frontend
  labels:
    app: backend
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
---
#db

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: frontend
  labels:
    app: mysql-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
  namespace: frontend
  labels:
    app: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql
          image: mysql:8
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              value: movieticketbookingsystem
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc


---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: frontend
  labels:
    app: mysql-db
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: Oracle?1

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  namespace: frontend
  labels:
    app: mysql-db
spec:
  type: ClusterIP
  selector:
    app: mysql-db
  ports:
    - port: 3306
      targetPort: 3306

