name: Angular CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: MovieTicketBookingSystem_FrontEnd/MovieTicketBookingSystem_FrontEnd
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.1

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('MovieTicketBookingSystem_FrontEnd/MovieTicketBookingSystem_FrontEnd/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

    

      - name: Install dependencies
        run: npm ci --legacy-peer-deps


      - name: Run Angular tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Build Angular
        run: npm run build -- --configuration=production

  gitleaks:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: zricethezav/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact

  trivy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Scan filesystem
        uses: aquasecurity/trivy-action@v0.20.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          severity: 'HIGH,CRITICAL'

      - name: Scan Docker image (optional)
        uses: aquasecurity/trivy-action@v0.20.0
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/movieticket-frontend:latest
          severity: 'HIGH,CRITICAL'

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: MovieTicketBookingSystem_FrontEnd/MovieTicketBookingSystem_FrontEnd
          file: MovieTicketBookingSystem_FrontEnd/MovieTicketBookingSystem_FrontEnd/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/movieticket-frontend:latest
